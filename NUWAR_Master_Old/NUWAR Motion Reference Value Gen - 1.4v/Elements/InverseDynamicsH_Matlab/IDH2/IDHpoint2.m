% function [Q, lamda] = IDHpoint2(q, dq, dp, alpha, beta)
%
% Single Point Hamiltonian Inverse Dynamics Function 2
%
% This solves the inverse dynamics problem for a specific point using the hamiltonian 
% formulation of the equations of motion. Inputs are position, velocity, the first derivative of
% the canonical momenta and the angles alpha and beta. Outputs are the required torque and 
% the lagrange multipliers. While the code is used to calculate one point at a time, it is able to 
% operate on numerous points at once if entered as a q, dq and dp are vectors. This function uses
% a formulation of the lagrange multipliers that leaves lamda1 and lamda2 as functions of lamda3.
% This significantly reduces calculation time, but only works for non-zero alpha 
% and beta.
% 
% Input Parameters:
% 		q 		= position vector (position of travelling plate and motor angles)
%  	dq 	= velocity vector (velocity of travelling plate and angular velocity of motors)
% 		dp 	= vector of first derivatives of canonical momentas
%     alpha = the orientation of the motors in the 'alpha' direction, in radians
%     beta  = the orientation of the motors in the 'beta' direction, in radians
%
% Default values:
% 		q, dq, dp, alpha and beta are required
%
% Output values:
%     Q = vector of motor torques
%     lambda = vector of Lagrange multipliers
%
% Required Functions
% 		InitArms
%		InitDynamics
%		
% All distances are in metres, and all angles in radians.
%
% Author: Ben Hawkey 2000


function [Q, lamda] = IDHpoint2(q, dq, dp, alpha, beta)


InitArms
InitDynamics

x = q(:,1);
y = q(:,2);
z = q(:,3);
dx = dq(:,1);
dy = dq(:,2);
dz = dq(:,3);
theta1 = q(:,4);
theta2 = q(:,5);
theta3 = q(:,6);
dtheta1 = dq(:,4);
dtheta2 = dq(:,5);
dtheta3 = dq(:,6);
dpx = dp(:,1);
dpy = dp(:,2);
dpz = dp(:,3);
dptheta1 = dp(:,4);
dptheta2 = dp(:,5);
dptheta3 = dp(:,6);

R = Ra-Rb;

cosalpha = cos(alpha);
sinalpha = sin(alpha);
cosbeta = cos(beta);
sinbeta = sin(beta);

costheta1 = cos(theta1);
sintheta1 = sin(theta1);
costheta2 = cos(theta2);
sintheta2 = sin(theta2);
costheta3 = cos(theta3);
sintheta3 = sin(theta3);

% All of the trigonometric expressions in the equations are replaced with constants
% so as to reduce the number of times they must be evaluated.

%lamda1 and lamda2 have been left as functions of lamda3 to reduce calculation time.

lamda3 = (-1).*(dpx+(-1).*(R+costheta2.*La.*(cosbeta+(-1).*sqrt(3).* ...
sinbeta)+La.*sinalpha.*(sqrt(3).*cosbeta+sinbeta).*sintheta2+2.*x) ...
.*((1/2).*dpy.*(costheta1.*La.*sinbeta+(-1).*cosbeta.*La.* ...
sinalpha.*sintheta1+y).^(-1)+(-1/4).*(2.*dpz+3.*g.*Mb+2.*g.*Mc).*( ...
cosalpha.*La.*sintheta1+z).^(-1)).*((1/2).*(costheta1.*La.* ...
sinbeta+(-1).*cosbeta.*La.*sinalpha.*sintheta1+y).^(-1).*((-1).* ...
sqrt(3).*R+(-1).*costheta2.*La.*(sqrt(3).*cosbeta+sinbeta)+(-1).* ...
La.*sinalpha.*((-1).*cosbeta+sqrt(3).*sinbeta).*sintheta2+2.*y)+( ...
-1/4).*(cosalpha.*La.*sintheta1+z).^(-1).*(4.*cosalpha.*La.* ...
sintheta2+4.*z)).^(-1)+(cosbeta.*costheta1.*La+R+La.*sinalpha.* ...
sinbeta.*sintheta1+(-1).*x).*(costheta1.*La.*sinbeta+(-1).* ...
cosbeta.*La.*sinalpha.*sintheta1+y).^(-1).*(dpy+(sqrt(3).*R+ ...
costheta2.*La.*(sqrt(3).*cosbeta+sinbeta)+La.*sinalpha.*((-1).* ...
cosbeta+sqrt(3).*sinbeta).*sintheta2+(-2).*y).*((1/2).*dpy.*( ...
costheta1.*La.*sinbeta+(-1).*cosbeta.*La.*sinalpha.*sintheta1+y) ...
.^(-1)+(-1/4).*(2.*dpz+3.*g.*Mb+2.*g.*Mc).*(cosalpha.*La.* ...
sintheta1+z).^(-1)).*((1/2).*(costheta1.*La.*sinbeta+(-1).* ...
cosbeta.*La.*sinalpha.*sintheta1+y).^(-1).*((-1).*sqrt(3).*R+(-1) ...
.*costheta2.*La.*(sqrt(3).*cosbeta+sinbeta)+(-1).*La.*sinalpha.*(( ...
-1).*cosbeta+sqrt(3).*sinbeta).*sintheta2+2.*y)+(-1/4).*( ...
cosalpha.*La.*sintheta1+z).^(-1).*(4.*cosalpha.*La.*sintheta2+4.* ...
z)).^(-1))).*(R+costheta3.*La.*(cosbeta+sqrt(3).*sinbeta)+(-1).* ...
La.*sinalpha.*(sqrt(3).*cosbeta+(-1).*sinbeta).*sintheta3+2.*x+( ...
-1).*(R+costheta2.*La.*(cosbeta+(-1).*sqrt(3).*sinbeta)+La.* ...
sinalpha.*(sqrt(3).*cosbeta+sinbeta).*sintheta2+2.*x).*((1/2).*( ...
costheta1.*La.*sinbeta+(-1).*cosbeta.*La.*sinalpha.*sintheta1+y) ...
.^(-1).*((-1).*sqrt(3).*R+(-1).*costheta2.*La.*(sqrt(3).*cosbeta+ ...
sinbeta)+(-1).*La.*sinalpha.*((-1).*cosbeta+sqrt(3).*sinbeta).* ...
sintheta2+2.*y)+(-1/4).*(cosalpha.*La.*sintheta1+z).^(-1).*(4.* ...
cosalpha.*La.*sintheta2+4.*z)).^(-1).*((1/2).*(costheta1.*La.* ...
sinbeta+(-1).*cosbeta.*La.*sinalpha.*sintheta1+y).^(-1).*(sqrt(3) ...
.*R+costheta3.*La.*(sqrt(3).*cosbeta+(-1).*sinbeta)+La.*sinalpha.* ...
(cosbeta+sqrt(3).*sinbeta).*sintheta3+2.*y)+(-1/4).*(cosalpha.* ...
La.*sintheta1+z).^(-1).*(4.*cosalpha.*La.*sintheta3+4.*z))+( ...
cosbeta.*costheta1.*La+R+La.*sinalpha.*sinbeta.*sintheta1+(-1).*x) ...
.*(costheta1.*La.*sinbeta+(-1).*cosbeta.*La.*sinalpha.*sintheta1+ ...
y).^(-1).*(sqrt(3).*R+costheta3.*La.*(sqrt(3).*cosbeta+(-1).* ...
sinbeta)+La.*sinalpha.*(cosbeta+sqrt(3).*sinbeta).*sintheta3+2.*y+ ...
(sqrt(3).*R+costheta2.*La.*(sqrt(3).*cosbeta+sinbeta)+La.* ...
sinalpha.*((-1).*cosbeta+sqrt(3).*sinbeta).*sintheta2+(-2).*y).*(( ...
1/2).*(costheta1.*La.*sinbeta+(-1).*cosbeta.*La.*sinalpha.* ...
sintheta1+y).^(-1).*((-1).*sqrt(3).*R+(-1).*costheta2.*La.*(sqrt( ...
3).*cosbeta+sinbeta)+(-1).*La.*sinalpha.*((-1).*cosbeta+sqrt(3).* ...
sinbeta).*sintheta2+2.*y)+(-1/4).*(cosalpha.*La.*sintheta1+z).^( ...
-1).*(4.*cosalpha.*La.*sintheta2+4.*z)).^(-1).*((1/2).*( ...
costheta1.*La.*sinbeta+(-1).*cosbeta.*La.*sinalpha.*sintheta1+y) ...
.^(-1).*(sqrt(3).*R+costheta3.*La.*(sqrt(3).*cosbeta+(-1).* ...
sinbeta)+La.*sinalpha.*(cosbeta+sqrt(3).*sinbeta).*sintheta3+2.*y) ...
+(-1/4).*(cosalpha.*La.*sintheta1+z).^(-1).*(4.*cosalpha.*La.* ...
sintheta3+4.*z)))).^(-1);

lamda2 = (-1).*((1/2).*(costheta1.*La.*sinbeta+(-1).*cosbeta.*La.* ...
  sinalpha.*sintheta1+y).^(-1).*((-1).*sqrt(3).*R+(-1).*costheta2.* ...
  La.*(sqrt(3).*cosbeta+sinbeta)+(-1).*La.*sinalpha.*((-1).*cosbeta+ ...
  sqrt(3).*sinbeta).*sintheta2+2.*y)+(-1/4).*(cosalpha.*La.* ...
  sintheta1+z).^(-1).*(4.*cosalpha.*La.*sintheta2+4.*z)).^(-1).*(( ...
  1/2).*(costheta1.*La.*sinbeta+(-1).*cosbeta.*La.*sinalpha.* ...
  sintheta1+y).^(-1).*(dpy+lamda3.*(sqrt(3).*R+costheta3.*La.*(sqrt( ...
  3).*cosbeta+(-1).*sinbeta)+La.*sinalpha.*(cosbeta+sqrt(3).* ...
  sinbeta).*sintheta3+2.*y))+(-1/4).*(cosalpha.*La.*sintheta1+z).^( ...
  -1).*(2.*dpz+3.*g.*Mb+2.*g.*Mc+4.*cosalpha.*La.*lamda3.*sintheta3+ ...
  4.*lamda3.*z));

lamda1 = (-1/2).*(costheta1.*La.*sinbeta+(-1).*cosbeta.*La.*sinalpha.* ...
  sintheta1+y).^(-1).*(dpy+lamda3.*(sqrt(3).*R+costheta3.*La.*(sqrt( ...
  3).*cosbeta+(-1).*sinbeta)+La.*sinalpha.*(cosbeta+sqrt(3).* ...
  sinbeta).*sintheta3+2.*y)+(sqrt(3).*R+costheta2.*La.*(sqrt(3).* ...
  cosbeta+sinbeta)+La.*sinalpha.*((-1).*cosbeta+sqrt(3).*sinbeta).* ...
  sintheta2+(-2).*y).*((1/2).*(costheta1.*La.*sinbeta+(-1).* ...
  cosbeta.*La.*sinalpha.*sintheta1+y).^(-1).*((-1).*sqrt(3).*R+(-1) ...
  .*costheta2.*La.*(sqrt(3).*cosbeta+sinbeta)+(-1).*La.*sinalpha.*(( ...
  -1).*cosbeta+sqrt(3).*sinbeta).*sintheta2+2.*y)+(-1/4).*( ...
  cosalpha.*La.*sintheta1+z).^(-1).*(4.*cosalpha.*La.*sintheta2+4.* ...
  z)).^(-1).*((1/2).*(costheta1.*La.*sinbeta+(-1).*cosbeta.*La.* ...
  sinalpha.*sintheta1+y).^(-1).*(dpy+lamda3.*(sqrt(3).*R+costheta3.* ...
  La.*(sqrt(3).*cosbeta+(-1).*sinbeta)+La.*sinalpha.*(cosbeta+sqrt( ...
  3).*sinbeta).*sintheta3+2.*y))+(-1/4).*(cosalpha.*La.*sintheta1+z) ...
  .^(-1).*(2.*dpz+3.*g.*Mb+2.*g.*Mc+4.*cosalpha.*La.*lamda3.* ...
  sintheta3+4.*lamda3.*z)));

lamda = [lamda1 lamda2 lamda3];

Q4 = dptheta1+(1/12).*((-6).*cosalpha.*costheta1.*g.*La.*(2.*H.*Ma+Mb+ ...
  2.*Mj)+(-2).*dtheta1.*La.*Mb.*(cosalpha.*dz.*sintheta1+dy.*( ...
  costheta1.*sinbeta+(-1).*cosbeta.*sinalpha.*sintheta1)+dx.*((-1).* ...
  cosbeta.*costheta1+(-1).*sinalpha.*sinbeta.*sintheta1)))+2.*La.* ...
  lamda1.*((costheta1.*sinalpha.*sinbeta+(-1).*cosbeta.*sintheta1).* ...
  (cosbeta.*costheta1.*La+R+La.*sinalpha.*sinbeta.*sintheta1+(-1).* ...
  x)+(cosbeta.*costheta1.*sinalpha+sinbeta.*sintheta1).*((-1).* ...
  costheta1.*La.*sinbeta+cosbeta.*La.*sinalpha.*sintheta1+(-1).*y)+ ...
  cosalpha.*costheta1.*(cosalpha.*La.*sintheta1+z));

Q5 = dptheta2+(1/12).*((-6).*cosalpha.*costheta2.*g.*La.*(2.*H.*Ma+Mb+ ...
	2.*Mj)+(-1).*dtheta2.*La.*Mb.*(costheta2.*((-1).*dy.*(sqrt(3).* ...
	cosbeta+sinbeta)+dx.*(cosbeta+(-1).*sqrt(3).*sinbeta))+(2.* ...
	cosalpha.*dz+dx.*sinalpha.*(sqrt(3).*cosbeta+sinbeta)+dy.* ...
	sinalpha.*(cosbeta+(-1).*sqrt(3).*sinbeta)).*sintheta2))+La.* ...
	lamda2.*((cosbeta.*(sqrt(3).*costheta2.*sinalpha+(-1).*sintheta2)+ ...
	sinbeta.*(costheta2.*sinalpha+sqrt(3).*sintheta2)).*x+(cosbeta.* ...
	costheta2.*sinalpha+(-1).*sqrt(3).*costheta2.*sinalpha.*sinbeta+ ...
	sqrt(3).*cosbeta.*sintheta2+sinbeta.*sintheta2).*y+(1/2).*(2.*z.* ...
	cos(alpha+(-1).*theta2)+R.*cos(alpha+(-1).*beta+(-1).*theta2)+(-1) ...
	.*R.*cos(alpha+beta+(-1).*theta2)+2.*z.*cos(alpha+theta2)+R.*cos( ...
	alpha+(-1).*beta+theta2)+(-1).*R.*cos(alpha+beta+theta2)+2.*R.* ...
	sin(beta+(-1).*theta2)+(-2).*R.*sin(beta+theta2)));

Q6 = dptheta3+(1/12).*((-6).*cosalpha.*costheta3.*g.*La.*(2.*H.*Ma+Mb+ ...
  	2.*Mj)+(-1).*dtheta3.*La.*Mb.*(costheta3.*(dy.*(sqrt(3).*cosbeta+( ...
  	-1).*sinbeta)+dx.*(cosbeta+sqrt(3).*sinbeta))+(2.*cosalpha.*dz+ ...
  	sinalpha.*(dx.*((-1).*sqrt(3).*cosbeta+sinbeta)+dy.*(cosbeta+sqrt( ...
  	3).*sinbeta))).*sintheta3))+(1/2).*La.*lamda3.*((-2).*(cosbeta.*( ...
  	sqrt(3).*costheta3.*sinalpha+sintheta3)+sinbeta.*((-1).* ...
  	costheta3.*sinalpha+sqrt(3).*sintheta3)).*x+2.*(cosbeta.* ...
  	costheta3.*sinalpha+sqrt(3).*costheta3.*sinalpha.*sinbeta+(-1).* ...
  	sqrt(3).*cosbeta.*sintheta3+sinbeta.*sintheta3).*y+2.*z.*cos( ...
  	alpha+(-1).*theta3)+R.*cos(alpha+(-1).*beta+(-1).*theta3)+(-1).* ...
  	R.*cos(alpha+beta+(-1).*theta3)+2.*z.*cos(alpha+theta3)+R.*cos( ...
  	alpha+(-1).*beta+theta3)+(-1).*R.*cos(alpha+beta+theta3)+2.*R.* ...
  	sin(beta+(-1).*theta3)+(-2).*R.*sin(beta+theta3));


Q = [Q4, Q5, Q6];

